<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <artifactId>featsoflove-web</artifactId>
  <packaging>war</packaging>

  <name>Feats of Love Web Application</name>
  <description>Feats of Love web application located at http://featsoflove.com</description>

  <parent>
    <groupId>com.wet.featsoflove</groupId>
    <artifactId>featsoflove</artifactId>
    <version>01.00.00.00-SNAPSHOT</version>
  </parent>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
    <!-- Landing Pages Dependencies -->
    <dependency>
      <groupId>com.wet.featsoflove</groupId>
      <artifactId>landing-pages-service</artifactId>
    </dependency>
		<!-- This is needed so that all request-mappings will be picked up by annotation-driven context -->
    <dependency>
    	<groupId>com.wet.featsoflove</groupId>
    	<artifactId>landing-pages-web</artifactId>
    </dependency>

		<!-- Nutrition Apps Dependencies -->
    <dependency>
    	<groupId>com.wet.featsoflove</groupId>
    	<artifactId>nutrition-apps-web</artifactId>
    </dependency>
	

    <!-- Spring Dependecies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>

    <!-- Hibernate Dependencies -->
    <!--<dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-validator</artifactId>
    </dependency>-->

    <!-- JSP Dependencies -->
    <dependency>
      <groupId>jstl</groupId>
      <artifactId>jstl</artifactId>
    </dependency>

    <!-- Other Dependencies -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

		<!-- Testing Dependencies -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

  </dependencies>

  <repositories>
    <repository>
      <id>eap</id>
      <url>http://maven.repository.redhat.com/techpreview/all</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>
	
  <pluginRepositories>
    <pluginRepository>
    <id>eap</id>
    <url>http://maven.repository.redhat.com/techpreview/all</url>
    <releases>
      <enabled>true</enabled>
    </releases>
    <snapshots>
      <enabled>true</enabled>
    </snapshots>
    </pluginRepository>
  </pluginRepositories>

  <profiles>
    <profile>
      <!-- When built in OpenShift the 'openshift' profile will be used when invoking mvn. -->
      <!-- Use this profile for any OpenShift specific customization your app will need. -->
      <!-- By default that is to put the resulting archive into the 'webapps' folder. -->
      <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
      <id>openshift</id>
      <build>
        <finalName>Feats of Love</finalName>
        <plugins>
          <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
              <outputDirectory>webapps</outputDirectory>
              <warName>ROOT</warName>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>dev</id>
      <build>
        <finalName>Feats of Love</finalName>
        <plugins>
          <!-- Embedded Tomcat7 Plugin: use tomcat7:run-war to package and run -->
          <plugin>
            <groupId>org.apache.tomcat.maven</groupId>
            <artifactId>tomcat7-maven-plugin</artifactId>
            <version>2.2</version>
            <configuration>
              <port>9090</port>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
